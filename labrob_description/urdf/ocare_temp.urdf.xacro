<?xml version="1.0"?>
<robot name="ocare" xmlns:xacro="http://www.ros.org/wiki/xacro">
 
  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find labrob_description)/urdf/materials.urdf.xacro" />
  <xacro:include filename="$(find labrob_description)/urdf/ocare_wheel.urdf.xacro" />
 
  <!-- PROPERTY LIST -->
  <!--All units in m-kg-s-radians unit system -->
  <property name="M_PI" value="3.1415926535897931" />
 
  <!-- Main Body-base -->
  <property name="base_height" value="0.40" /> 
  <property name="base_radius" value="0.18" /> 
  <property name="base_mass" value="15" /> <!-- in kg-->
  
  <!-- Main Body-base -->
  <property name="neck_link_height" value="0.025" /> 
  <property name="neck_link_radius" value="0.175" /> 
  <property name="neck_link_mass" value="0.1" /> <!-- in kg-->
  
  <!-- Main Body-base -->
  <property name="head_link_height" value="0.08" /> 
  <property name="head_link_radius" value="0.18" /> 
  <property name="head_link_mass" value="0.1" /> <!-- in kg-->
  
  <!--Left Arm-base-->
  <property name="left_arm_base_mass" value="0.20" /> 
  <property name="left_arm_base_x_offset" value="0.0" /> 
  <property name="left_arm_base_y_offset" value="0.0" /> 
  <property name="left_arm_base_z_offset" value="0.1" /> 
  <property name="left_arm_base_x_size" value="0.05" /> 
  <property name="left_arm_base_y_size" value="0.02" /> 
  <property name="left_arm_base_z_size" value="0.10" /> 
  <property name="base_x_origin_to_left_arm_base" value="0.0" />
  <property name="base_y_origin_to_left_arm_base" value="0.05" />
  <property name="base_z_origin_to_left_arm_base" value="0.0" />
  
    <!--Left Arm1-base-->
  <property name="left_arm_1_link_mass" value="0.01" /> 
  <property name="left_arm_1_link_x_offset" value="0.0" /> 
  <property name="left_arm_1_link_y_offset" value="0.176" /> 
  <property name="left_arm_1_link_z_offset" value="0.0" /> 
  <property name="left_arm_1_link_x_size" value="0.05" /> 
  <property name="left_arm_1_link_y_size" value="0.176" /> 
  <property name="left_arm_1_link_z_size" value="0.02" /> 
  
    <!--Left Arm2-base-->
  <property name="left_arm_2_link_mass" value="0.01" /> 
  <property name="left_arm_2_link_x_offset" value="-0.078" /> 
  <property name="left_arm_2_link_y_offset" value="0.03" /> 
  <property name="left_arm_2_link_z_offset" value="-0.01" /> 
  <property name="left_arm_2_link_x_size" value="0.078" /> 
  <property name="left_arm_2_link_y_size" value="0.06" /> 
  <property name="left_arm_2_link_z_size" value="0.02" /> 
  
	<!--Camera Link-->
  <property name="camera_link_x_size" value="0.02" /> 
  <property name="camera_link_y_size" value="0.02" /> 
   <property name="camera_link_z_size" value="0.02" /> 
 
  <!--Inertial macros for the box and cylinder. Units are kg*m^2-->
  <macro name="box_inertia" params="m x y z">
    <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
              iyy="${m*(x*x+z*z)/12}" iyz = "0"
              izz="${m*(x*x+z*z)/12}" /> 
  </macro>
 
  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
    <inertial>
      <mass value="0.0001" />
      <origin xyz="0 0 0" />
      <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0" 
          izz="0.0001" />
    </inertial>
    <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
            <box size="0.001 0.001 0.001" />
        </geometry>
    </visual>
  </link>
  
  <joint name="base_footprint_joint" type="fixed">
	<origin xyz="0 0 ${wheel_radius + base_z_origin_to_wheel_origin}" rpy="0 0 0" />
    <parent link="base_footprint"/>
    <child link="base_link" />
  </joint>
  
  <gazebo reference="base_footprint">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
 

 
  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="base_link">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <cylinder_inertia  m="${base_mass}" r="${base_radius}" h="${base_height}" />
    </inertial>    
    
    <visual name="visual">
      <origin xyz="0 0 -0.14" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
      <material name="Gray" />
    </visual>  
    
    <!--visual name="caster_visual">
		<origin xyz="-0.15 0 0" rpy="0 0 0 " />
          <geometry>
            <sphere>
              <radius>.05</radius>
            </sphere>
          </geometry>
      <material name="Yellow" />
    </visual-->  
    
    <collision>
      <origin xyz="0 0 -0.14" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${base_height}" radius="${base_radius}" />
      </geometry>
    </collision>     
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
 
   <!-- NECK-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="neck_link">
    <inertial>
      <mass value="${neck_link_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <cylinder_inertia  m="${neck_link_mass}" r="${neck_link_radius}" h="${neck_link_height}" />
    </inertial>    
    
    <visual name="visual">
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${neck_link_height}" radius="${neck_link_radius}" />
      </geometry>
      <material name="Black" />
    </visual>  
    
    <!--collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${neck_link_height}" radius="${neck_link_radius}" />
      </geometry>
    </collision-->     
  </link>
  <gazebo reference="neck_link">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="neck_link_joint" type="fixed">
	<parent link="base_link"/>
	<child link="neck_link"/>
	<origin xyz="0 0 0.0725" rpy="0 0 0" /> 
  </joint>
 
  <!-- HEAD-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="head_link">
    <inertial>
      <mass value="${head_link_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
      <cylinder_inertia  m="${head_link_mass}" r="${head_link_radius}" h="${head_link_height}" />
    </inertial>    
    
    <visual name="visual">
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${head_link_height}" radius="${head_link_radius}" />
      </geometry>
      <material name="Gray" />
    </visual>  
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
        <cylinder length="${head_link_height}" radius="${head_link_radius}" />
      </geometry>
    </collision>     
  </link>
  <gazebo reference="head_link">
    <material>Gazebo/Gray</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="head_link_joint" type="fixed">
	<parent link="neck_link"/>
	<child link="head_link"/>
	<origin xyz="0 0 0.0525" rpy="0 0 0" /> 
  </joint>
 
 
  <!--LEFT-ARM-BASE-->
  <link name="left_arm_base_link">
    <inertial>
      <mass value="${left_arm_base_mass}" />
      <origin 
					xyz=
				"${left_arm_base_x_offset} ${left_arm_base_y_offset} ${left_arm_base_z_offset-left_arm_base_z_size/2}"
					rpy=
				"0 0 0 " />
      <!--The 3x3 rotational inertia matrix. -->
       <box_inertia m="${left_arm_base_mass}" x="${left_arm_base_x_size}" y="${left_arm_base_y_size}" z="${left_arm_base_z_size}" />
    </inertial>    
    
    <visual name="visual">
      <origin 
					xyz=
				"${left_arm_base_x_offset} ${left_arm_base_y_offset} ${left_arm_base_z_offset-left_arm_base_z_size/2}"
					rpy=
				"0 0 0 " />
      <geometry>
        <box size="${left_arm_base_x_size} ${left_arm_base_y_size} ${left_arm_base_z_size}" />
      </geometry>
     
      <material name="Green" />
    </visual>
    
	<collision>
		<origin 
					xyz=
				"${left_arm_base_x_offset-left_arm_base_x_size/2} ${left_arm_base_y_offset-left_arm_base_y_size/2} ${left_arm_base_z_offset-left_arm_base_z_size/2}"
					rpy=
				"0 0 0 " />
      <geometry>
        <box size="${left_arm_base_x_size} ${left_arm_base_y_size} ${left_arm_base_z_size}" />
      </geometry>
	</collision>     

  </link>
  <gazebo reference="left_arm_base_link">
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="left_arm_base_link_joint" type="prismatic">
	<parent link="base_link"/>
	<child link="left_arm_base_link"/>
	<origin xyz="${base_x_origin_to_left_arm_base} ${base_y_origin_to_left_arm_base} ${base_z_origin_to_left_arm_base}" rpy="${-M_PI/2} 0 0" /> 
	<axis xyz="0 0 1"/>
	<limit effort="100" velocity="100" lower="0" upper="0.15" />
	<joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <transmission name="left_arm_base_link_tran">
	<type>transmission_interface/SimpleTransmission</type>
	<joint name="left_arm_base_link_joint" >
		<hardwareInterface>EffortJointInterface</hardwareInterface>
	</joint>
	<actuator name="left_arm_base_link_joint_actu">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		<mechanicalReduction>1</mechanicalReduction>
	</actuator>
  </transmission>
 
   <!--LEFT-ARM1-LINK-->
  <link name="left_arm_1_link">
    <inertial>
      <mass value="${left_arm_1_link_mass}" />
      <origin 
					xyz=
				"${left_arm_1_link_x_offset} ${left_arm_1_link_y_offset-left_arm_1_link_y_size/2} ${left_arm_1_link_z_offset}"
					rpy=
				"0 0 0 " />
      <!--The 3x3 rotational inertia matrix. -->
       <box_inertia m="${left_arm_1_link_mass}" x="${left_arm_1_link_x_size}" y="${left_arm_1_link_y_size}" z="${left_arm_1_link_z_size}" />
    </inertial>    
    
    <visual name="visual">
      <origin 
					xyz=
				"${left_arm_1_link_x_offset} ${left_arm_1_link_y_offset-left_arm_1_link_y_size/2} ${left_arm_1_link_z_offset}"
					rpy=
				"0 0 0 " />
      <geometry>
        <box size="${left_arm_1_link_x_size} ${left_arm_1_link_y_size} ${left_arm_1_link_z_size}" />
      </geometry>
     
      <material name="Green" />
    </visual>
    
	<collision>
      <origin 
					xyz=
				"${left_arm_1_link_x_offset} ${left_arm_1_link_y_offset-left_arm_1_link_y_size/2} ${left_arm_1_link_z_offset}"
					rpy=
				"0 0 0 " />
      <geometry>
        <box size="${left_arm_1_link_x_size} ${left_arm_1_link_y_size} ${left_arm_1_link_z_size}" />
      </geometry>
	</collision>     

  </link>
  <gazebo reference="left_arm_1_link">
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="left_arm_1_link_joint" type="revolute">
	<parent link="left_arm_base_link"/>
	<child link="left_arm_1_link"/>
	<origin xyz="${left_arm_base_x_offset} ${left_arm_base_y_offset} ${left_arm_base_z_offset}" rpy="0 0 0" /> 
	<axis xyz="0 0 1"/>
	<limit effort="5" velocity="1" lower="${-M_PI}" upper="0" />
	<joint_properties damping="1.0" friction="0.0"/>
  </joint>
  <transmission name="left_arm_1_link_tran">
  	<type>transmission_interface/SimpleTransmission</type>
	<joint name="left_arm_1_link_joint" >
		<hardwareInterface>EffortJointInterface</hardwareInterface>
	</joint>
	<actuator name="left_arm_1_link_joint_actu">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		<mechanicalReduction>60</mechanicalReduction>
	</actuator>
  </transmission>
  
     <!--LEFT-ARM2-LINK-->
  <link name="left_arm_2_link">
    <inertial>
      <mass value="${left_arm_2_link_mass}" />
      <origin 
					xyz=
				"${left_arm_2_link_x_offset} ${left_arm_2_link_y_offset-left_arm_2_link_x_offset/2} ${left_arm_2_link_z_offset}"
					rpy=
				"0 0 0 " />
      <!--The 3x3 rotational inertia matrix. -->
       <box_inertia m="${left_arm_2_link_mass}" x="${left_arm_2_link_x_size}" y="${left_arm_2_link_y_size}" z="${left_arm_2_link_z_size}" />
    </inertial>    
    
    <visual name="visual">
      <origin 
					xyz=
				"${left_arm_2_link_x_offset+left_arm_2_link_x_size/2} ${left_arm_2_link_y_offset} ${left_arm_2_link_z_offset}"
					rpy=
				"0 0 0 " />
      <geometry>
        <box size="${left_arm_2_link_x_size} ${left_arm_2_link_y_size} ${left_arm_2_link_z_size}" />
      </geometry>
     
      <material name="Red" />
    </visual>
    
	<collision>
      <origin 
					xyz=
				"${left_arm_2_link_x_offset+left_arm_2_link_x_size/2} ${left_arm_2_link_y_offset} ${left_arm_2_link_z_offset}"
					rpy=
				"0 0 0 " />
      <geometry>
        <box size="${left_arm_2_link_x_size} ${left_arm_2_link_y_size} ${left_arm_2_link_z_size}" />
      </geometry>
	</collision>     

  </link>
  <gazebo reference="left_arm_2_link">
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="left_arm_2_link_joint" type="revolute">
	<parent link="left_arm_1_link"/>
	<child link="left_arm_2_link"/>
	<origin xyz="${left_arm_1_link_x_offset} ${left_arm_1_link_y_offset} ${left_arm_1_link_z_offset}" rpy="0 0 ${M_PI/2}" /> 
	<axis xyz="0 0 1"/>
	<limit effort="5" velocity="1" lower="0" upper="${3*M_PI/2}" />
	<joint_properties damping="1.0" friction="0.0"/>
  </joint>
  <transmission name="left_arm_2_link_tran">
  	<type>transmission_interface/SimpleTransmission</type>
	<joint name="left_arm_2_link_joint" >
		<hardwareInterface>EffortJointInterface</hardwareInterface>
	</joint>
	<actuator name="left_arm_2_link_joint_actu">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		<mechanicalReduction>60</mechanicalReduction>
	</actuator>
  </transmission>
  
  <!-- WHEELs -->
  <wheel lr="right" parent="base_link" translateX="0" translateY="-1" translateZ="-1" flipY="-1"/>
  <wheel lr="left" parent="base_link" translateX="0" translateY="1" translateZ="-1" flipY="-1"/>.
  
  <link name="base_idler_wheel">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
          <geometry>
            <sphere radius=".06"/>
          </geometry>
      <material name="DarkGray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
          <geometry>
            <sphere radius=".06"/>
          </geometry>
    </collision>
    <inertial>
      <mass value="5"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.00227083333333" ixy="0" ixz="0" iyy="0.00227083333333" iyz="0" izz="0.00227083333333"/>
    </inertial>
  </link>
  <gazebo reference="base_idler_wheel">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
    <material>Gazebo/Gray</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="base_idler_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="base_idler_wheel"/>
    <origin rpy="0 0 0" xyz="-0.21 0 -0.34"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <transmission name="base_idler_wheel_tran">
  	<type>transmission_interface/SimpleTransmission</type>
	<joint name="base_idler_wheel_joint" >
		<hardwareInterface>EffortJointInterface</hardwareInterface>
	</joint>
	<actuator name="base_idler_wheel_joint_actu">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		<mechanicalReduction>1</mechanicalReduction>
	</actuator>
  </transmission>


  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link_x_size} ${camera_link_y_size} ${camera_link_z_size}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link_x_size} ${camera_link_y_size} ${camera_link_z_size}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.17 0 0" rpy="0 0 0"/>
    <parent link="head_link"/>
    <child link="camera_link"/>
  </joint>
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>ocare/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
 
  <!-- Hokuyo Laser -->
  <link name="laser">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
		<box size="0.04 0.04 0.04"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
		<box size="0.04 0.04 0.04"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <joint name="laser_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="neck_link"/>
    <child link="laser"/>
  </joint>
  <gazebo reference="laser">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <!--horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>3.1415</min_angle>
            <max_angle>-3.1415</max_angle>
          </horizontal-->
          <horizontal>
            <samples>667</samples>
            <resolution>0.352</resolution>
            <min_angle>-2.094395</min_angle>
            <max_angle>2.094395</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>5.6</max>
          <resolution>0.03</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/ocare/laser/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <link name="imu_link">
    <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 -0.1" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                 iyy="0.001" iyz="0.0" 
                 izz="0.001" />
    </inertial>     
        <visual>
        <origin xyz="0 0 -0.1" rpy="0 0 0" />
        <geometry>
            <box size = "0.1 0.1 0.1"/> 
                </geometry>
        </visual>
    <collision>         
        <origin xyz="0 0 -0.1" rpy="0 0 0" />
        <geometry>
            <box size = "0.01 0.01 0.01"/> 
        </geometry>
    </collision>     
    </link>
  <joint name="imu_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin xyz="0.05 0 0.15" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="imu_link" />
  </joint>
  <gazebo>    
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
        <alwaysOn>true</alwaysOn>       
        <bodyName>imu_link</bodyName>
        <topicName>imu_data</topicName>
        <serviceName>imu_service</serviceName>
        <gaussianNoise>0.0</gaussianNoise>
        <updateRate>60.0</updateRate> 
    </plugin>
  </gazebo>

<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>50</updateRate>
    <leftJoint>base_left_wheel_joint</leftJoint>
    <rightJoint>base_right_wheel_joint</rightJoint>
    <wheelSeparation>0.33</wheelSeparation>
    <wheelDiameter>0.125</wheelDiameter>
    <torque>20</torque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom_</odometryTopic>
    <odometryFrame>odom_</odometryFrame>
    <robotBaseFrame>base_footprint</robotBaseFrame>
    <publishWheelTF>false</publishWheelTF>
    <publishWheelJointState>false</publishWheelJointState>
    <!--robotNamespace>ocare</robotNamespace-->
  </plugin>
  
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/ocare</robotNamespace>
  </plugin>
</gazebo>


 
</robot>
